---
title: "ANOVA"
author: "Huandong Chang"
date: "2022-12-10"
output:
  html_document:
    df_print: paged
---

```{r setup, include=FALSE,warning=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
Bdata=read.csv("~/R/2023Spring_MAP/dataset/C4 Bacteria.csv")
```

## Assumption: Variance


#### variance checking: barplot
```{r,warning=FALSE}
var_boxplot = function(dataset, response, x1, x2=NULL){
library(ggplot2) 
ggplot(data = dataset, aes(x = {{x1}}, y = {{response}})) + geom_boxplot() + aes(colour = {{x2}}) +theme(axis.title=element_text(size=14,face="bold"), axis.text.x = element_text(size = 12, angle = 45))  
}

var_boxplot(Bdata, Count, Building)
```

#### variance checking: pointplot
```{r,warning=FALSE}
var_pointplot = function(dataset, response, x1, x2=NULL){
library(ggplot2) 
ggplot(dataset,  aes(x = {{x1}}, y = {{response}}, color={{x2}})) + 
  geom_point() +
  stat_summary(
    fun = "mean",       
    geom = "point",
    col = "black",
    size = 2,
    shape = 24,
    fill = "red"
  )+theme(axis.title=element_text(size=14,face="bold"),axis.text.x = element_text(size = 12, angle = 45))  
}  

var_pointplot(Bdata, Count, Building)
```

#### variance checking: table
```{r,warning=FALSE}
var_table = function(dataset, response, x1, x2=NULL, x3=NULL, type=1){
library(dplyr)
summary_table = group_by(dataset, {{x1}},{{x2}},{{x3}}) %>% 
     summarise(GroupVariance=var({{response}}), 
                SampleSize=n(), .groups = 'drop')
summary_df = as.data.frame(summary_table)
summary_df = summary_df %>% 
  mutate_if(is.numeric, round, digits = 2)

if (type == 1){
  library(reactablefmtr)
reactable(summary_df,defaultColDef = colDef(cell = data_bars(summary_df, box_shadow = TRUE, round_edges = TRUE,
text_position = "outside-base",
fill_color = c("#e81cff", "#40c9ff"),
background = "#e5e5e5",fill_gradient = TRUE))) 

}
else{
  library(formattable)
  library(DT)
# as.datatable(formattable(summary_df, list(SampleSize = color_bar("#80ed99"),GroupVariance = color_bar("#f28482"))))
table = formattable(summary_df, list(SampleSize = color_bar("#80ed99"),GroupVariance = color_bar("#f28482")))
as.datatable(table)
}
}

```
#### table version 1
```{r,warning=FALSE,warning=FALSE}
var_table(Bdata, Count, Building, Location)
```

#### table version 2
```{r,warning=FALSE}
var_table(Bdata, Count, Building, Location, type = 2)
```

## Assumption: Normality
```{r,warning=FALSE}
normal_err = function(dataset_residual, response, x1, x2=NULL, interaction = TRUE, bins = 30){
  if (nargs()>2){
    
  library(rlang)
  response <- parse_expr(quo_name(enquo(response)))
  x1 <- parse_expr(quo_name(enquo(x1)))
  x2 <- parse_expr(quo_name(enquo(x2)))
  if (interaction == TRUE){
    aov1=eval_tidy(expr(aov(!!response ~ !!x1*!!x2, data = dataset_residual)))
  }
  else{
    aov1=eval_tidy(expr(aov(!!response ~ !!x1+!!x2, data = dataset_residual)))
  }
  
  residual_df = as.data.frame(aov1$residuals)
  colnames(residual_df) = c("residual")
  
  }
else{
    residual_df = as.data.frame(dataset_residual)
  colnames(residual_df) = c("residual")
}

library(ggplot2)
library(gridExtra)
qqplot <- ggplot(residual_df, aes(sample = residual))
qqplot = qqplot + stat_qq() + stat_qq_line() + labs(title="QQPLOT for Error Terms")

hist = ggplot(residual_df, aes(x=residual)) + geom_histogram(bins=bins, fill="lightblue")+ labs(title="Histogram for Error Terms")

grid.arrange(qqplot, hist, ncol=1)

}




```

#### use residuals as input
```{r}
aov1 = aov(log(Count)~Building*Location, Bdata)
normal_err(aov1$residuals, bins=20)
```

#### use regular inputs
```{r}
normal_err(Bdata, log(Count),Building,Location)

```

## Assumption: iid

```{r}
iid = function(dataset, anova_model){
library(ggplot2)
library(gridExtra)

residual_fitted = ggplot(anova_model, aes(x = .fitted, y = .resid)) +
  geom_point() +
  geom_hline(yintercept = 0)+xlab("fitted value")+ylab("residual")

dataset$rownum = 1:dim(dataset)[1]
residual_order = ggplot(anova_model, aes(x=dataset$rownum, y = .resid)) +
  geom_point() +
  geom_hline(yintercept = 0)+xlab("row number")+ylab("residual")
  

grid.arrange(residual_fitted, residual_order, ncol=1)
}

```

```{r}
aov1 = aov(log(Count)~Building*Location, Bdata)
iid(Bdata, aov1)
```



## Effects


#### Main Effect Plot
```{r}
main_plot = function(dataset, response, x1, x2, x3, ylim){
library(dplyr)
library(ggplot2)

# ylim if not specified
y_min = 0
y_max = 0

## mean for x1
df1 <- dataset %>%
  group_by({{x1}}) %>%
  summarise(Mean_Response = mean({{response}}))

y_min = min(df1$Mean_Response)
y_max = max(df1$Mean_Response)

## mean for x2
if(!missing(x2)){
  df2 <- dataset %>%
  group_by({{x2}}) %>%
  summarise(Mean_Response = mean({{response}}))
y_min = min(df2$Mean_Response,y_min)
y_max = max(df2$Mean_Response,y_max)  
}
  
## mean for x3
if(!missing(x3)){
  df3 <- dataset %>%
  group_by({{x3}}) %>%
  summarise(Mean_Response = mean({{response}}))
  y_min = min(df3$Mean_Response,y_min)
  y_max = max(df3$Mean_Response,y_max) }

## main plot for x1
if(missing(ylim)){
    p1 <- ggplot(df1, aes({{x1}}, Mean_Response)) +
  geom_line(aes(group = 1)) + 
  theme(axis.title=element_text(size=14,face="bold"),axis.text.x = element_text(size = 12, angle = 45))+ 
  geom_point() + coord_cartesian(ylim = c(y_min, y_max))
}
else{
  p1 <- ggplot(df1, aes({{x1}}, Mean_Response)) +
  geom_line(aes(group = 1)) +
    theme(axis.title=element_text(size=14,face="bold"),axis.text.x = element_text(size = 12, angle = 45))+ 
  geom_point() +
  coord_cartesian(ylim = ylim)
}



## main plot for x2
if(!missing(x2)){
if(missing(ylim)){
    p2 <- ggplot(df2, aes({{x2}}, Mean_Response)) +
      theme(axis.title=element_text(size=14,face="bold"),axis.title.y = element_blank(),axis.text.x = element_text(size = 12, angle = 45))+ 
  geom_line(aes(group = 1)) + 
  geom_point() + coord_cartesian(ylim = c(y_min, y_max))
}
  else{
  p2 <- ggplot(df2, aes({{x2}}, Mean_Response)) +
    theme(axis.title=element_text(size=14,face="bold"),axis.title.y = element_blank(),axis.text.x = element_text(size = 12, angle = 45))+ 
  geom_line(aes(group = 1)) + 
  geom_point() +
  coord_cartesian(ylim = ylim)
  }
}




## main plot for x3
if(!missing(x3)){
if(missing(ylim)){
    p3 <- ggplot(df3, aes({{x3}}, Mean_Response)) +
    theme(axis.title=element_text(size=14,face="bold"),axis.title.y = element_blank(),axis.text.x = element_text(size = 12, angle = 45))+ 
  geom_line(aes(group = 1)) + 
  geom_point() + coord_cartesian(ylim = c(y_min, y_max))
}
  else{
  p3 <- ggplot(df3, aes({{x3}}, Mean_Response)) +
  theme(axis.title=element_text(size=14,face="bold"),axis.title.y = element_blank(),axis.text.x = element_text(size = 12, angle = 45))+ 
  geom_line(aes(group = 1)) + 
  geom_point() +
  coord_cartesian(ylim = ylim)
}
}
## Plot
if(!missing(x2) && !missing(x3)){
require(gridExtra)
grid.arrange(p1, p2, p3,nrow = 1)
}
else if (!missing(x2)){
require(gridExtra)
grid.arrange(p1, p2,nrow = 1)
  }
else{
  p1
}
}

main_plot(Bdata, Count, Building, Location)
```

#### Interaction Effect Plot
```{r}
interaction_plot = function(dataset, response, x1, x2){
library(dplyr)
library(ggplot2)
df <- dataset %>%
  group_by({{x1}}, {{x2}}) %>%
  summarise(Mean_Response = mean({{response}}),.groups = 'drop')

ggplot(df, aes({{x1}}, Mean_Response, color = {{x2}})) +
  theme(axis.title=element_text(size=14,face="bold"),
        axis.text.x = element_text(size = 12, angle = 45))+ 
  geom_line(aes(group = {{x2}})) + 
  geom_point() +
  labs(title="Interaction Plot") 
}

interaction_plot(Bdata, Count, Building, Location)
```


## Anova Table
```{r}
anova_table = function(dataset, response, x1, x2, interaction = TRUE){
library(dplyr)
library(ggplot2)
library(rlang)
  response <- parse_expr(quo_name(enquo(response)))
  x1 <- parse_expr(quo_name(enquo(x1)))
  x2 <- parse_expr(quo_name(enquo(x2)))
  if (interaction == TRUE){
    aov1=eval_tidy(expr(aov(!!response ~ !!x1*!!x2, data = dataset)))
  }
  else{
    aov1=eval_tidy(expr(aov(!!response ~ !!x1+!!x2, data = dataset)))
  }
  
  summary(aov1)
}

anova_table(Bdata, Count, Building, Location)
```


## C4 Dataset

#### Cholesterol
```{r}
Cho=read.csv("~/R/2023Spring_MAP/dataset/C4 Cholesterol.csv")
```

```{r}
library("easyExp")
var_boxplot(Cho, Cholesterol, Drug, Diet)
```

```{r}
var_pointplot(Cho, Cholesterol, Drug)
```

```{r}
var_table(Cho, Cholesterol, Drug, Exercies, Diet)
```

```{r}
var_table(Cho, Cholesterol, Drug, Diet, Exercies, type = 2)
```

```{r}
aov1 = aov(Cholesterol~Drug*Diet*Exercies, Cho)
normal_err(aov1$residuals)
```

```{r}
aov1 = aov(Cholesterol~Drug*Diet*Exercies, Cho)
iid(Cho, aov1)
```

```{r}
main_plot(Cho, Cholesterol, Drug, Diet, Exercies, c(180,220))
```

```{r}
interaction_plot(Cho, Cholesterol, Drug, Diet)
```

```{r}
aov1 = aov(Cholesterol~Drug*Diet*Exercies, Cho)
# summary(aov1)
normal_err(aov1$residuals)
```


#### Popcorn
```{r}
Popcorn=read.csv("~/R/2023Spring_MAP/dataset/C4 Popcorn.csv")
Popcorn$Time<-as.factor(Popcorn$Time)
```

```{r}
library(easyExp)
var_boxplot(Popcorn, PopRate, Microwave, Time)
```

```{r}
var_pointplot(Popcorn, PopRate, Microwave)
```

```{r}
var_table(Popcorn, PopRate, Microwave, Time)
```

```{r}
var_table(Popcorn, PopRate, Microwave, Time, type = 2)
```

```{r}
normal_err(Popcorn, PopRate, Microwave, Time)
```

```{r}
aov1 = aov(PopRate~Microwave*Time, Popcorn)
iid(Popcorn, aov1)
```

```{r}
main_plot(Popcorn, PopRate, Microwave, Time, ylim=c(75,85))
```

```{r}
interaction_plot(Popcorn, PopRate, Microwave, Time)
```

```{r}
anova_table(Popcorn, PopRate, Microwave, Time)
```




#### Movies
```{r}
Movies=read.csv("~/R/2023Spring_MAP/dataset/C4 Movies.csv")
```

```{r}
var_boxplot(Movies, Total.Gross, Genre)
```

```{r}
var_pointplot(Movies, Total.Gross, Genre)
```

```{r}
var_table(Movies, Total.Gross, Genre)
```

```{r}
var_table(Movies, Total.Gross, Rating, type = 2)
```

```{r}
normal_err(Movies, Total.Gross, Genre, Rating, interaction = TRUE)
```

```{r}
aov1 = aov(Total.Gross~Genre*Rating, Movies)
iid(Movies, aov1)
```

```{r}
main_plot(Movies, Total.Gross, Genre)
```

```{r}
interaction_plot(Movies, Total.Gross, Genre, Rating)
```

```{r}
anova_table(Movies, Total.Gross, Genre, Rating)
```




#### Bacteria
```{r}
Bacteria=read.csv("~/R/2023Spring_MAP/dataset/C4 Bacteria.csv")
```

```{r}
var_boxplot(Bacteria, Count, Building, Location)
```

```{r}
var_pointplot(Bacteria, Count, Building, Location)
```

```{r}
var_table(Bacteria, Count, Building, Location)
```

```{r}
var_table(Bacteria, Count, Building, Location, type = 2)
```

```{r}
normal_err(Bacteria, Count, Building, Location, interaction = TRUE)
```

```{r}
aov1 = aov(Count~Building*Location, Bacteria)
iid(Bacteria, aov1)
```

```{r}
main_plot(Bacteria, Count, Building, Location)
```

```{r}
interaction_plot(Bacteria, Count, Building, Location)
```

```{r}
anova_table(Bacteria, Count, Building, Location)
```




#### Soda
```{r}
Soda=read.csv("~/R/2023Spring_MAP/dataset/C4 Soda.csv")
Soda$logFizz = log(Soda$Fizz)
```

```{r}
var_boxplot(Soda, logFizz, Soda, Tilt)
```

```{r}
var_pointplot(Soda, logFizz, Soda, Tilt)
```

```{r}
var_table(Soda, logFizz, Soda, Tilt, Temp)
```

```{r}
var_table(Soda, logFizz, Soda, Tilt, Temp, type = 2)
```

```{r}
aov1 = aov(logFizz~Soda*Tilt*Temp, Soda)
normal_err(aov1$residuals)
```

```{r}
aov1 = aov(logFizz~Soda*Tilt*Temp, Soda)
iid(Soda, aov1)
```


```{r}
main_plot(Soda, logFizz, Soda, Tilt, Temp, c(-2,1))
```

```{r}
interaction_plot(Soda, logFizz, Soda, Tilt)
```





#### MemoryA
```{r}
MemoryA=read.csv("~/R/2023Spring_MAP/dataset/C4 MemoryA.csv")
MemoryA$sqrtWords = sqrt(MemoryA$Words)
```

```{r}
var_boxplot(MemoryA, sqrtWords, Process, Age)
```

```{r}
var_pointplot(MemoryA, sqrtWords, Process, Age)
```

```{r}
var_table(MemoryA, sqrtWords, Process, Age)
```

```{r}
var_table(MemoryA, sqrtWords, Process, Age, type = 2)
```

```{r}
normal_err(MemoryA, sqrtWords, Process, Age, interaction = TRUE)
```

```{r}
aov1 = aov(sqrtWords~Process*Age, MemoryA)
iid(MemoryA, aov1)
```

```{r}
main_plot(MemoryA, sqrtWords, Process, Age)
```

```{r}
interaction_plot(MemoryA, sqrtWords, Process, Age)
```

```{r}
anova_table(MemoryA, sqrtWords, Process, Age)
```



#### Towels2
```{r}
PaperTowels=read.csv("~/R/2023Spring_MAP/dataset/C4 PaperTowels.csv")
PaperTowels$Water<-as.factor(PaperTowels$Water)
PaperTowels$LogStrength<-log(PaperTowels$Strength)
```

```{r}
var_boxplot(PaperTowels, LogStrength, Brand, Water)
```

```{r}
var_pointplot(PaperTowels, LogStrength, Brand, Water)
```

```{r}
var_table(PaperTowels, LogStrength, Brand, Water)
```

```{r}
var_table(PaperTowels, LogStrength, Brand, Water, type = 2)
```

```{r}
normal_err(PaperTowels, LogStrength, Brand, Water, interaction = TRUE)
```

```{r}
aov1 = aov(LogStrength~Brand*Water, PaperTowels)
iid(PaperTowels, aov1)
```

```{r}
main_plot(PaperTowels, LogStrength, Brand, Water, ylim=c(5,8))
```

```{r}
interaction_plot(PaperTowels, LogStrength, Brand, Water)
```

```{r}
anova_table(PaperTowels, LogStrength, Brand, Water)
```



#### Cups
```{r}
Cups=read.csv("~/R/2023Spring_MAP/dataset/C4 Cups.csv")
Cups$Side.Temp<-as.factor(Cups$Side.Temp)
Cups$Bottom.Temp<-as.factor(Cups$Bottom.Temp)
Cups$Bottom.Pressure<-as.factor(Cups$Bottom.Pressure)
```

```{r}
var_boxplot(Cups, Leaks, Side.Temp, Bottom.Temp)
```

```{r}
var_pointplot(Cups, Leaks, Side.Temp, Bottom.Temp)
```

```{r}
var_table(Cups, Leaks, Side.Temp, Bottom.Temp)
```

```{r}
var_table(Cups, Leaks, Side.Temp, Bottom.Temp, type = 2)
```

```{r}
normal_err(Cups, Leaks, Side.Temp, Bottom.Temp, interaction = TRUE)
```

```{r}
aov1 = aov(Leaks~Side.Temp*Bottom.Temp, Cups)
iid(Cups, aov1)
```


```{r}
main_plot(Cups, Leaks, Side.Temp, Adhesive, Bottom.Temp)
```

```{r}
interaction_plot(Cups, Leaks, Side.Temp, Adhesive)
```

```{r}
anova_table(Bacteria, Count, Building, Location)
```




